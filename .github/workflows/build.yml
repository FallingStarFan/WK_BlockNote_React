name: Build and Release Project

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npm rebuild rollup
          npm install @hocuspocus/provider

      # 4️⃣ Build project
      - name: Build project
        run: npm run build

      # 5️⃣ Save build output to a temporary location
      - name: Save build output
        run: |
          mkdir -p ../build-temp/dist
          mkdir -p ../build-temp/types/src
          cp -R dist/* ../build-temp/dist/
          cp -R types/src/* ../build-temp/types/src/

      # 6️⃣ Switch to release branch
      - name: Switch to release branch
        run: |
          git fetch origin release
          git checkout release || git checkout -b release

      - name: Setup Git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

      # 7️⃣ Restore build output and push
      - name: Restore build output
        run: |
          # 刪掉 release 分支舊的 build
          rm -rf dist types/src
          # 拷貝暫存的 build output
          cp -R ../build-temp/dist dist
          cp -R ../build-temp/types/src types/src
          # 強制加入 Git（即使被 .gitignore 擋住）
          git add -f dist types/src
          git commit -m "Update release branch with latest build" || echo "No changes to commit"
          git push origin release --force
